{"version":3,"sources":["primitive.svg","punkyicon.svg","settings.js","ComingSoon.js","serviceWorker.js","index.js"],"names":["module","exports","settings","texttop","textbottom","icontop","iconbottom","company1","company2","color","white","light","dark","primary","primarymute","IntroCard","StyledIntroCard","className","TextTop","Company1","Company2","TextBottom","Brand","href","alt","title","src","primitivetext","fadeInCard","keyframes","fadeInDark","fadeInRed","fadeInText","fadeInMark","styled","div","primitiveicon","h1","h2","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,iKC6B5BC,EA5BE,CACbC,QAAS,WACTC,WAAY,cACZC,QAAS,GACTC,WAAY,GACZC,SAAU,WACVC,SAAU,aAEVC,MAAO,CACHC,MAAO,UACPC,MAAO,UACPC,KAAM,UACNC,QAAS,UACTC,YAAa,uB,ozKCkBNC,MAxBf,WACE,OACE,kBAACC,EAAD,KAEE,yBAAKC,UAAU,QACb,kBAACC,EAAD,CAASD,UAAU,QAAQf,EAASC,SACpC,yBAAKc,UAAU,YACb,kBAACE,EAAD,KAAWjB,EAASK,UACpB,kBAACa,EAAD,KAAWlB,EAASM,WAGtB,kBAACa,EAAD,CAAYJ,UAAU,eAAef,EAASE,aAGhD,kBAACkB,EAAD,KACE,uBAAGC,KAAK,iCAAiCC,IAAI,6CAA6CC,MAAM,8CAC9F,yBAAKC,IAAKC,IAAeV,UAAU,oBAAoBO,IAAI,0BAW/DI,EAAaC,YAAH,KAiBVC,EAAaD,YAAH,KAcVE,EAAYF,YAAH,KAYTG,EAAaH,YAAH,KAUVI,EAAaJ,YAAH,KAMVb,EAAkBkB,IAAOC,IAAV,IAYGjC,EAASO,MAAME,MACXyB,IAOflC,EAASO,MAAMC,MACXkB,EASC1B,EAASO,MAAMG,KAGhBkB,EAUC5B,EAASO,MAAMK,YAEhBiB,EAUAC,EAWJ9B,EAASO,MAAMI,QAIfX,EAASO,MAAME,OAStBO,EAAUgB,IAAOC,IAAV,IAKFjC,EAASO,MAAMI,QAIXoB,EAgBF/B,EAASO,MAAMI,SAKtBQ,EAAaa,IAAOC,IAAV,IAOLjC,EAASO,MAAMI,QAGXoB,EAiBA/B,EAASO,MAAMI,SAMxBM,EAAWe,IAAOG,GAAV,KAORjB,EAAWc,IAAOI,GAAV,IAKJpC,EAASO,MAAMG,MAGnBU,EAAQY,IAAOC,IAAV,KC/OSI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.daf1256f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/primitive.2d968a9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/punkyicon.c4108f53.svg\";","// config\nconst settings = {\n    texttop: \"New Site\",\n    textbottom: \"Coming Soon\",\n    icontop: \"\",\n    iconbottom: \"\",\n    company1: \"Eclectic\",\n    company2: \"Collective\",\n\n    color: {\n        white: \"#ffffff\",\n        light: \"#CCC5B3\",\n        dark: \"#0C0B13\",\n        primary: \"#E1623F\",\n        primarymute: \"rgba(225,98,63,.7)\"\n    }\n}\n\n\n// apple red - #E1623F\" - rgba(225,98,63,.7)\n\n// mustard -  #ffdb58 / rgb(255,219,88,.7)\n// lime - #00FF00\n// teal - #008080 / rgba(0,128,128,.7)\n// mango - #ffc324 / rgba(255, 195, 36, .7)\n// watermelon - #fc6c85 / rgba(252,108,133, .7)\n// salmom - #ff8c69 / \trgba(255,140,105, .7)\n// tomato - #ff6347 / \trgba(255,99,71, .7)\n\nexport default settings;","import React from 'react';\nimport { keyframes } from '@emotion/core';\nimport styled from '@emotion/styled'\n\nimport settings from './settings';\nimport primitivetext from './primitive.svg';\nimport primitiveicon from './punkyicon.svg';\n\nfunction IntroCard() {\n  return (\n    <StyledIntroCard>\n\n      <div className=\"card\">\n        <TextTop className=\"mark\">{settings.texttop}</TextTop>\n        <div className=\"content \">\n          <Company1>{settings.company1}</Company1>\n          <Company2>{settings.company2}</Company2>\n        </div>\n        { /* <div className=\"mark upside-down\"> ¨^<sup>∆¬∫ ˚√≈</sup> </div> */}\n        <TextBottom className=\"mark bottom\">{settings.textbottom}</TextBottom>\n      </div>\n\n      <Brand>\n        <a href=\"https://primitivedigital.co.uk\" alt=\"Primitive Digital - Design and Development\" title=\"Primitive Digital - Design and Development\">\n          <img src={primitivetext} className=\"Primitive Digital\" alt=\"Primitive Digital\" />\n        </a>\n      </Brand>\n\n    </StyledIntroCard>\n  );\n}\n\nexport default IntroCard;\n\n\nconst fadeInCard = keyframes`\n  from{\n    top: 40px;\n    left: -330px;\n    opacity: 0;\n    transform: scale(1.3) rotate(-60deg);\n  }\n  20%{\n    opacity: 0.1;\n  }\n  to{\n    top:0px;\n    left: 0px;\n    transform: scale(1) rotate(0deg);\n  }\n`;\n\nconst fadeInDark = keyframes`\n  from{\n    opacity: 0;\n    transform: rotate(72deg) translate(120px, 800px);\n  }\n  30%{\n    opacity: .1;\n  }\n  to{\n    opacity: 1;\n    transform: rotate(72deg) translate(75px, 20px);\n  }\n`;\n\nconst fadeInRed = keyframes`\n  from{\n    opacity: 0;\n    transform: rotate(70deg) translate(7px, 800px));\n  }\n  30%{ opacity: .2; }\n  to{\n    opacity: 1;\n    transform: rotate(58deg) translate(0px, 0px);\n  }\n`;\n\nconst fadeInText = keyframes`\n  from{\n    opacity: 0;\n  }\n  to{\n    top:50%;\n    opacity: 1;\n  }\n`;\n\nconst fadeInMark = keyframes`\n  from{ opacity: 0; }\n  to{ opacity: 1; }\n`;\n\n\nconst StyledIntroCard = styled.div`\n  postition: relative;\n  overflow: hidden;\n  box-sizing(border-box);\n\n  sup { font-size: 50%; }\n\n  .card{\n    position:relative;\n    margin: 100px auto 50px;\n    width: 350px;\n    height: 490px;\n    background-color: ${settings.color.light};\n    background-image: url(${primitiveicon});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 50%;\n    border-radius: 12px;\n    box-shadow: 1px 1px 6px rgba(0,0,0,0.25);\n    overflow: hidden;\n    color: ${settings.color.white};\n    animation: ${fadeInCard} .9s ease-out forwards;\n  }\n  .card:before{\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: -50px;\n    background: ${settings.color.dark};\n    opacity: 0;\n    border-left: solid 250px #664C4F;\n    animation: ${fadeInDark} .8s 1s forwards;\n\n  }\n  .card:after{\n    content: \"\";\n    position: absolute;\n    top: -50px;\n    bottom: -50px;\n    left: 50px;\n    right: 50px;\n    background: ${settings.color.primarymute};\n    opacity: 0;\n    animation: ${fadeInRed} .8s 1.5s forwards;\n  }\n  \n  .content{\n    z-index: 10;\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    opacity: 0;\n    transform: translate(-50%, -50%);\n    animation: ${fadeInText} 1.2s .1s forwards;\n    animation-delay: 1500ms;\n\n  }\n\n  .mark.upside-down{\n    transform: rotate(180deg);\n    top: auto;\n    left: auto;\n    bottom: 16px;\n    right: 24px;\n    color: ${settings.color.primary};\n\n  }\n  .mark.upside-down:after {\n    color: ${settings.color.light};\n  }\n\n\n\n\n`;\n\n\nconst TextTop = styled.div`\n\n  position: absolute;\n  font-size: 40px;\n  font-weight: bold;\n  color: ${settings.color.primary};\n  top: 18px;\n  left: 15px;\n  opacity: 0;\n  animation: ${fadeInMark} .8s .5s forwards;\n  animation-delay: 1500ms;\n\n  /*\n  &:after{\n    content: \"\\f141\";\n    font-family: \"Ionicons\";\n    display: block;\n    padding-left: 5px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    text-rendering: auto;\n    font-size: 30px;\n    letter-spacing: 5px;\n    color: ${settings.color.primary};\n  }\n  */\n\n`;\nconst TextBottom = styled.div`\n\n  position: absolute;\n  bottom: 18px;\n  right: 15px;\n  font-size: 30px;\n  font-weight: bold;\n  color: ${settings.color.primary};\n\n  opacity: 0;\n  animation: ${fadeInMark} .8s .5s forwards;\n  animation-delay: 1500ms;\n\n  /*\n  &:before {\n      content: \"\\f141\";\n      font-family: \"Ionicons\";\n      display: block;\n      text-align: right;\n      padding-left: 5px;\n      font-style: normal;\n      font-weight: normal;\n      font-variant: normal;\n      text-transform: none;\n      text-rendering: auto;\n      font-size: 30px;\n      letter-spacing: 5px;\n      color: ${settings.color.primary};\n  }\n  */\n \n`;\n\nconst Company1 = styled.h1`\n  margin:0;\n  padding: 3px;\n  font-size:60px;\n  line-height:40px;\n`;\n\nconst Company2 = styled.h2`\n  margin:0;\n  padding: 4px 3px 3px 7px;\n  font-size:36px;\n  line-height:36px;\n  color:${settings.color.dark};\n`;\n\nconst Brand = styled.div`\n  margin: -20px auto 0;\n  height: 50px;\n  width: 200px;\n  padding: 0 10px 20px;\n  opacity: .5;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ComingSoon';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}